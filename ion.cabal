-- Initial ion.cabal generated by cabal init.  For further documentation, 
-- see http://haskell.org/cabal/users-guide/

name:                ion
version:             1.0.0.0
synopsis: EDSL for concurrent, realtime, embedded programming on top of Ivory
description:
   Ion is a Haskell EDSL for concurrent, realtime, embedded programming.
   It interfaces with the Ivory EDSL, <http://ivorylang.org/>, to perform
   code generation.  It supports similar scheduling functionality to Atom
   (<https://hackage.haskell.org/package/atom>), and also accomodates
   asynchronous programming with continuation-passing style.

   Be forewarned that Ion is still heavily experimental.  For some
   further explanation, see the write-up at HaskellEmbedded,
   <https://haskellembedded.github.io/posts/2016-09-23-introducing-ion.html>.
license:             BSD3
license-file:        LICENSE
   
author:              Chris Hodapp
maintainer:          Hodapp87@gmail.com
stability:           experimental
homepage:            https://haskellembedded.github.io/
-- copyright:           
category:            Language, Embedded
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

source-repository head
  type: git
  location: https://github.com/HaskellEmbedded/ion

library
  exposed-modules:     Ivory.Language.Ion
                     , Ivory.Language.Ion.Base
                     , Ivory.Language.Ion.Code
                     , Ivory.Language.Ion.CPS
                     , Ivory.Language.Ion.Operators
                     , Ivory.Language.Ion.Schedule
                     , Ivory.Language.Ion.Util
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base >=4.6 && <5
                     , containers
                     , ivory >= 0.1.0.0
                     , ivory-backend-c
                     , mtl
  hs-source-dirs:      src
  default-language:    Haskell2010

executable ion_example
  main-is:             Ivory/Language/Ion/Examples/Example.hs
  --ghc-options:         -threaded -rtsopts -with-rtsopts=-N
  other-modules:       Ivory.Language.Ion.Base
                     , Ivory.Language.Ion.Code
                     , Ivory.Language.Ion.CPS
                     , Ivory.Language.Ion.Operators
                     , Ivory.Language.Ion.Schedule
                     , Ivory.Language.Ion.Util
  build-depends:       base
                     , containers
                     , ivory
                     , ivory-backend-c
                     , mtl
  hs-source-dirs:      src
  default-language:    Haskell2010
